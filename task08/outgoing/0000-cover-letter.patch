From 909576de1e65262757822700834176bd0494a607 Mon Sep 17 00:00:00 2001
From: Juan Antonio <juant.aldea@gmail.com>
Date: Mon, 16 Jul 2018 19:26:58 +0200
Subject: [0123456789AB] [PATCH 0/2] Task 08 Results
Content-Type: multipart/mixed; boundary="------------7C88B4B1FF05AB0205D06059"
Content-Language: en-GB

--------------7C88B4B1FF05AB0205D06059
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: 7bit

Proofs: 

#################################
For permissions and all that:
#################################

# ls -l /sys/kernel/debug/eudyptula/
-rw-r--r-- 1 root root 4096 čec 13 12:02 foo
-rw-rw-rw- 1 root root    0 čec 13 12:21 id
-r--r--r-- 1 root root    0 čec 13 12:02 jiffies

#######
For ID:
#######

# dmesg|tail
[...]
[28945.122843] MODULE LOADED.
# cat invalid | tee /sys/kernel/debug/eudyptula/id
00c49bc9fdc1tee: /dev/eudyptula: Invalid argument
$ dmesg|tail
[...]
[28945.122843] MODULE LOADED.
[28989.715568] BAD STRING.
# cat invalid1 | tee /sys/kernel/debug/eudyptula/id
mugretee: /dev/eudyptula: Invalid argument
# dmesg|tail
[...]
[28945.122843] MODULE LOADED.
[28989.715568] BAD STRING.
[29009.466960] BAD LEN.
# cat /sys/kernel/debug/eudyptula/id | sudo tee /sys/kernel/debug/eudyptula/id
0123456789AB$ dmesg|tail
[...]
[28945.122843] MODULE LOADED.
[28989.715568] BAD STRING.
[29009.466960] BAD LEN.
[29355.601227] ALL OK.
# sudo cat /sys/kernel/debug/eudyptula/id
0123456789AB$

#############
For jifflies:
#############

# cat jiffies 
8539909

########
For foo:
########

# dd of=/sys/kernel/debug/eudyptula/foo if=/dev/urandom
dd: writing to '/sys/kernel/debug/eudyptula/foo': No space left on device
9+0 records in
8+0 records out
4096 bytes (4,1 kB, 4,0 KiB) copied, 0,00046927 s, 8,7 MB/s

# echo "Puedo escribir los versos mas tristes esta noche" > /sys/kernel/debug/eudyptula/foo 
# cat /sys/kernel/debug/eudyptula/foo 
Puedo escribir los versos mas tristes esta noche


Q.E.D


Juan Antonio (2):
  [0123456789AB] [PATCH 01/02] Task 08: add jiffies file
  [0123456789AB] [PATCH 02/02] Task 08: add foo file

 task08.c | 53 +++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 53 insertions(+)

--------------7C88B4B1FF05AB0205D06059
Content-Type: text/x-csrc; name="task08.c"
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment; filename="task08.c"

#include <asm/mmu_context.h>
#include <asm/uaccess.h>
#include <linux/module.h>
#include <linux/debugfs.h>

MODULE_LICENSE("GPL v2");
MODULE_AUTHOR("Juan Antonio Aldea Armenteros");
MODULE_DESCRIPTION("Task 08 - debugfs");

static const char EUDYP_ID[] = "0123456789AB";
static const size_t EUDYP_ID_LEN = 12;

struct dentry *dir;

static ssize_t id_driver_write(struct file *file, const char __user *buf,
	size_t count, loff_t *ppos);

static ssize_t id_driver_read(struct file *file, char __user *buf,
	size_t count, loff_t *ppos);

static const struct file_operations id_driver_fops = {
	.owner	= THIS_MODULE,
	.read	= id_driver_read,
	.write	= id_driver_write,
};

static ssize_t id_driver_write(struct file *file, const char __user *buf,
	size_t count, loff_t *ppos)
{
	char input[EUDYP_ID_LEN];
	ssize_t result = -EINVAL;

	if (count != EUDYP_ID_LEN) {
		pr_alert("BAD LEN0. %ld, %ld\n", count, EUDYP_ID_LEN);
		pr_alert("|%.20s|\n", buf);
		return -EINVAL;
	}

	if (count != strnlen_user(buf, EUDYP_ID_LEN + 2) - 1) {
		pr_alert("BAD LEN1. %ld, %ld\n", count, EUDYP_ID_LEN);
		pr_alert("|%.14s|", buf);
		return -EINVAL;
	}

	result = simple_write_to_buffer(input, EUDYP_ID_LEN, ppos, buf,
		EUDYP_ID_LEN);

	if (result < 0) {
		return result;
	}

	if (strncmp(input, EUDYP_ID, EUDYP_ID_LEN) == 0) {
		pr_alert("ALL OK.\n");
		return EUDYP_ID_LEN;
	}

	pr_alert("|%.14s|", buf);

	pr_alert("BAD STRING.\n");
	return -EINVAL;
}

static ssize_t id_driver_read(struct file *file, char __user *buf,
	size_t count, loff_t *ppos)
{
	return simple_read_from_buffer(buf, count, ppos, &EUDYP_ID,
		EUDYP_ID_LEN);
}

static int __init init_m(void)
{
	dir = debugfs_create_dir("eudyptula", NULL);
	if (!dir) {
		pr_alert("debugfs eudyptula task 8: failed to create /sys/kernel/debug/eudyptula\n");
		return -ENODEV;
	}

	if (!debugfs_create_file("id", 0666, dir, NULL, &id_driver_fops)) {
		pr_alert("debugfs eudyptula task 8: failed to create /sys/kernel/debug/eudyptula/id\n");
		goto fail;
	}

	pr_alert("MODULE LOADED.\n");

	return 0;

fail:
	debugfs_remove_recursive(dir);
	return -ENODEV;
}

static void __exit exit_m(void)
{
	debugfs_remove_recursive(dir);
	pr_alert("MODULE UNLOADED.\n");
}

module_init(init_m);
module_exit(exit_m);

--------------7C88B4B1FF05AB0205D06059--

-- 
2.17.1
